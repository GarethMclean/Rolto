generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  disabled          Boolean?
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@index([resource_id], map: "sso_providers_resource_id_pattern_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  profiles                    profiles?

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ai_usage_logs {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id     String   @db.Uuid
  chat_session_id String   @db.Uuid
  message_id      String   @db.Uuid
  model_name      String
  provider        String   @default("openai")
  tokens_used     Int
  cost_per_token  Decimal  @db.Decimal(10, 8)
  total_cost      Decimal  @db.Decimal(10, 6)
  created_at      DateTime @default(now()) @db.Timestamptz(6)

  @@index([business_id], map: "idx_ai_usage_logs_business_id")
  @@index([chat_session_id], map: "idx_ai_usage_logs_chat_session_id")
  @@index([created_at], map: "idx_ai_usage_logs_created_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model billing_adjustments {
  id                     String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subscription_id        String                 @db.Uuid
  adjustment_type        String
  amount                 Decimal                @db.Decimal(10, 2)
  description            String?
  stripe_invoice_item_id String?
  from_date              DateTime?              @db.Timestamptz(6)
  to_date                DateTime?              @db.Timestamptz(6)
  days_prorated          Int?
  usage_cycle_id         String?                @db.Uuid
  created_at             DateTime?              @default(now()) @db.Timestamptz(6)
  business_subscriptions business_subscriptions @relation(fields: [subscription_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([subscription_id], map: "idx_billing_adjustments_subscription_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model business_subscriptions {
  id                          String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id                 String                @db.Uuid
  stripe_subscription_id      String?               @unique
  stripe_customer_id          String?
  stripe_price_id             String?
  trial_start_date            DateTime?             @db.Timestamptz(6)
  trial_end_date              DateTime?             @db.Timestamptz(6)
  trial_status                String?               @default("active")
  current_plan                String
  billing_frequency           String?               @default("monthly")
  billing_status              String?               @default("active")
  current_billing_cycle_start DateTime?             @db.Timestamptz(6)
  current_billing_cycle_end   DateTime?             @db.Timestamptz(6)
  next_billing_date           DateTime?             @db.Timestamptz(6)
  previous_plan               String?
  plan_change_date            DateTime?             @db.Timestamptz(6)
  cancellation_reason         String?
  cancellation_date           DateTime?             @db.Timestamptz(6)
  grace_period_until          DateTime?             @db.Timestamptz(6)
  auto_renew                  Boolean?              @default(true)
  proration_behavior          String?               @default("create_prorations")
  stripe_metadata             Json?
  created_at                  DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?             @default(now()) @db.Timestamptz(6)
  billing_adjustments         billing_adjustments[]
  businesses                  businesses            @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  subscription_events         subscription_events[]
  usage_cycles                usage_cycles[]

  @@index([business_id], map: "idx_business_subscriptions_business_id")
  @@index([stripe_subscription_id], map: "idx_business_subscriptions_stripe_subscription_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model businesses {
  id                       String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                     String
  plan                     String
  created_at               DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at               DateTime                  @default(now()) @db.Timestamptz(6)
  website                  String?
  notification_preferences Json?                     @default("{}")
  notification_email       String?
  subscription_id          String?
  trial_start_date         DateTime?                 @db.Timestamptz(6)
  trial_end_date           DateTime?                 @db.Timestamptz(6)
  billing_start_date       DateTime?                 @db.Timestamptz(6)
  next_billing_date        DateTime?                 @db.Timestamptz(6)
  business_subscriptions   business_subscriptions[]
  chat_sessions            chat_sessions[]
  chatbots                 chatbots[]
  document_chunks          document_chunks[]
  documents                documents[]
  email_notification_logs  email_notification_logs[]
  email_notifications      email_notifications[]
  messages                 messages[]
  notification_storage     notification_storage[]
  profiles                 profiles[]
  usage_cycles             usage_cycles[]
  usage_metrics            usage_metrics[]

  @@index([notification_email], map: "idx_businesses_notification_email")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model chat_sessions {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id             String                    @db.Uuid
  visitor_id              String
  chatbot_id              String
  status                  chat_status               @default(active)
  needs_human             Boolean                   @default(false)
  assigned_to             String?                   @db.Uuid
  created_at              DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at              DateTime                  @default(now()) @db.Timestamptz(6)
  resolved_at             DateTime?                 @db.Timestamptz(6)
  metadata                Json?                     @default("{}")
  lead_id                 String?                   @db.Uuid
  session_name            String?
  profiles                profiles?                 @relation(fields: [assigned_to], references: [id], onDelete: NoAction, onUpdate: NoAction)
  businesses              businesses                @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  chatbots                chatbots                  @relation(fields: [chatbot_id], references: [chatbot_id], onDelete: Cascade, onUpdate: NoAction)
  leads                   leads?                    @relation(fields: [lead_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  email_notification_logs email_notification_logs[]
  messages                messages[]
  notification_storage    notification_storage[]

  @@index([business_id], map: "idx_chat_sessions_business_id")
  @@index([lead_id], map: "idx_chat_sessions_lead_id")
  @@index([business_id, lead_id, created_at(sort: Desc)], map: "idx_chat_sessions_lead_lookup")
  @@index([session_name], map: "idx_chat_sessions_session_name")
  @@index([status], map: "idx_chat_sessions_status")
  @@index([visitor_id, business_id], map: "idx_chat_sessions_visitor_business")
  @@index([visitor_id], map: "idx_chat_sessions_visitor_id")
  @@index([business_id, visitor_id, lead_id], map: "idx_chat_sessions_visitor_lead")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model chatbots {
  id             String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id    String          @db.Uuid
  chatbot_id     String          @unique
  name           String          @default("Chatbot")
  settings       Json?           @default("{}")
  is_active      Boolean         @default(true)
  created_at     DateTime        @default(now()) @db.Timestamptz(6)
  updated_at     DateTime        @default(now()) @db.Timestamptz(6)
  avatar_config  Json?           @default("{\"type\": \"default\"}")
  quick_actions  Json?           @default("[]")
  display_config Json?           @default("{\"mode\": \"card\", \"layout\": \"compact\"}")
  display_mode   String?         @default("card")
  chat_sessions  chat_sessions[]
  businesses     businesses      @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([business_id], map: "idx_chatbots_business_id")
  @@index([chatbot_id], map: "idx_chatbots_chatbot_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model document_chunks {
  id          String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  document_id String                 @db.Uuid
  business_id String                 @db.Uuid
  content     String
  embedding   Unsupported("vector")?
  chunk_index Int
  created_at  DateTime               @default(now()) @db.Timestamptz(6)
  businesses  businesses             @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  documents   documents              @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([embedding], map: "idx_document_chunks_embedding")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model document_views {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  document_id   String   @db.Uuid
  business_id   String   @db.Uuid
  user_id       String?  @db.Uuid
  viewed_at     DateTime @default(now()) @db.Timestamptz(6)
  view_duration Int?
  metadata      Json?    @default("{}")

  @@index([business_id], map: "idx_document_views_business_id")
  @@index([document_id], map: "idx_document_views_document_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model documents {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id     String            @db.Uuid
  name            String
  content         String
  file_size       Int?              @default(0)
  file_type       String?
  uploaded_by     String?           @db.Uuid
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  updated_at      DateTime          @default(now()) @db.Timestamptz(6)
  edit_history    Json?             @default("[]")
  last_edited_by  String?           @db.Uuid
  last_edited_at  DateTime?         @db.Timestamptz(6)
  document_chunks document_chunks[]
  businesses      businesses        @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles        profiles?         @relation(fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([business_id], map: "idx_documents_business_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model email_notification_logs {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id     String        @db.Uuid
  session_id      String        @db.Uuid
  recipient_email String
  email_type      String
  sent_at         DateTime      @default(now()) @db.Timestamptz(6)
  status          String        @default("pending")
  error_message   String?
  retry_count     Int?          @default(0)
  created_at      DateTime      @default(now()) @db.Timestamptz(6)
  businesses      businesses    @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  chat_sessions   chat_sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([business_id], map: "idx_email_notification_logs_business_id")
  @@index([email_type], map: "idx_email_notification_logs_email_type")
  @@index([sent_at], map: "idx_email_notification_logs_sent_at")
  @@index([session_id], map: "idx_email_notification_logs_session_id")
  @@index([status], map: "idx_email_notification_logs_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_notifications {
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id     String     @db.Uuid
  recipient_email String
  subject         String
  status          String     @default("sent")
  sent_at         DateTime   @default(now()) @db.Timestamptz(6)
  metadata        Json?      @default("{}")
  created_at      DateTime   @default(now()) @db.Timestamptz(6)
  updated_at      DateTime   @default(now()) @db.Timestamptz(6)
  businesses      businesses @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([business_id], map: "idx_email_notifications_business_id")
  @@index([created_at], map: "idx_email_notifications_created_at")
  @@index([recipient_email], map: "idx_email_notifications_recipient_email")
  @@index([sent_at], map: "idx_email_notifications_sent_at")
  @@index([status], map: "idx_email_notifications_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model leads {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id   String          @db.Uuid
  email         String?
  name          String?
  first_seen_at DateTime        @default(now()) @db.Timestamptz(6)
  last_seen_at  DateTime        @default(now()) @db.Timestamptz(6)
  visitor_id    String
  session_count Int             @default(1)
  metadata      Json?           @default("{}")
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  updated_at    DateTime        @default(now()) @db.Timestamptz(6)
  chat_sessions chat_sessions[]

  @@unique([business_id, visitor_id])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model messages {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  chat_session_id      String                 @db.Uuid
  business_id          String                 @db.Uuid
  sender_type          sender_type
  sender_id            String?                @db.Uuid
  content              String
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  metadata             Json?                  @default("{}")
  businesses           businesses             @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  chat_sessions        chat_sessions          @relation(fields: [chat_session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles             profiles?              @relation(fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  notification_storage notification_storage[]

  @@index([chat_session_id, created_at], map: "idx_messages_chat_session_created")
  @@index([chat_session_id], map: "idx_messages_chat_session_id")
  @@index([created_at], map: "idx_messages_created_at")
  @@index([chat_session_id, sender_type], map: "idx_messages_session_sender")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model notification_storage {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id     String        @db.Uuid
  session_id      String        @db.Uuid
  message_id      String?       @db.Uuid
  type            String
  title           String
  description     String?
  session_name    String?
  visitor_name    String?
  message_content String?
  created_at      DateTime?     @default(now()) @db.Timestamptz(6)
  read_at         DateTime?     @db.Timestamptz(6)
  expires_at      DateTime?     @default(dbgenerated("(now() + '30 days'::interval)")) @db.Timestamptz(6)
  businesses      businesses    @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  messages        messages?     @relation(fields: [message_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  chat_sessions   chat_sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([business_id], map: "idx_notification_storage_business_id")
  @@index([created_at], map: "idx_notification_storage_created_at")
  @@index([read_at], map: "idx_notification_storage_read_at")
  @@index([session_id], map: "idx_notification_storage_session_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model plan_configurations {
  id                         String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  plan_name                  String                @unique
  display_name               String
  description                String?
  monthly_price              Decimal?              @db.Decimal(10, 2)
  yearly_discount_percentage Decimal?              @default(20.00) @db.Decimal(5, 2)
  is_active                  Boolean?              @default(true)
  created_at                 DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?             @default(now()) @db.Timestamptz(6)
  plan_feature_values        plan_feature_values[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model plan_feature_values {
  id                  String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  plan_name           String
  feature_name        String
  value               Json
  created_at          DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?           @default(now()) @db.Timestamptz(6)
  is_visible          Boolean             @default(true)
  plan_features       plan_features       @relation(fields: [feature_name], references: [name], onDelete: Cascade, onUpdate: NoAction)
  plan_configurations plan_configurations @relation(fields: [plan_name], references: [plan_name], onDelete: Cascade, onUpdate: NoAction)

  @@unique([plan_name, feature_name])
  @@index([feature_name], map: "idx_plan_feature_values_feature_name")
  @@index([plan_name], map: "idx_plan_feature_values_plan_name")
  @@index([is_visible], map: "idx_plan_feature_values_visibility")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model plan_features {
  id                      String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                    String                @unique
  display_name            String
  description             String?
  category                String
  input_type              String
  default_value           Json?
  options                 Json?
  overage_enabled         Boolean?              @default(false)
  overage_rate            Decimal?              @default(0.0000) @db.Decimal(10, 4)
  overage_unit            String?               @default("per_unit") @db.VarChar(50)
  created_at              DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?             @default(now()) @db.Timestamptz(6)
  sort_order              Int                   @default(0)
  compare_table_sort_order Int                  @default(0)
  is_active               Boolean               @default(true)
  plan_feature_values     plan_feature_values[]

  @@index([category], map: "idx_plan_features_category")
  @@index([is_active], map: "idx_plan_features_is_active")
  @@index([sort_order], map: "idx_plan_features_sort_order")
  @@index([compare_table_sort_order], map: "idx_plan_features_compare_table_sort_order")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profiles {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String          @unique @db.Uuid
  business_id   String?         @db.Uuid
  role          app_role        @default(business_user)
  email         String
  first_name    String?
  last_name     String?
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  updated_at    DateTime        @default(now()) @db.Timestamptz(6)
  chat_sessions chat_sessions[]
  documents     documents[]
  messages      messages[]
  businesses    businesses?     @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model stripe_config {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  config_key   String    @unique
  config_value Json
  description  String?
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model subscription_events {
  id                     String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subscription_id        String                 @db.Uuid
  event_type             String
  event_data             Json
  occurred_at            DateTime?              @default(now()) @db.Timestamptz(6)
  from_plan              String?
  to_plan                String?
  effective_date         DateTime?              @db.Timestamptz(6)
  stripe_event_id        String?
  invoice_id             String?
  created_at             DateTime?              @default(now()) @db.Timestamptz(6)
  business_subscriptions business_subscriptions @relation(fields: [subscription_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([subscription_id], map: "idx_subscription_events_subscription_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model usage_cycles {
  id                         String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id                String                  @db.Uuid
  subscription_id            String?                 @db.Uuid
  cycle_start_date           DateTime                @db.Timestamptz(6)
  cycle_end_date             DateTime                @db.Timestamptz(6)
  plan_name                  String
  conversations_used         Int?                    @default(0)
  conversations_limit        Int
  chatbots_used              Int?                    @default(0)
  chatbots_limit             Int
  documents_used             Int?                    @default(0)
  documents_limit            Int
  conversations_overage      Int?                    @default(0)
  conversations_overage_cost Decimal?                @default(0) @db.Decimal(10, 4)
  stripe_invoice_id          String?
  overage_billed             Boolean?                @default(false)
  cycle_status               String?                 @default("active")
  created_at                 DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?               @default(now()) @db.Timestamptz(6)
  businesses                 businesses              @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  business_subscriptions     business_subscriptions? @relation(fields: [subscription_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([business_id], map: "idx_usage_cycles_business_id")
  @@index([cycle_start_date, cycle_end_date], map: "idx_usage_cycles_cycle_dates")
  @@index([subscription_id], map: "idx_usage_cycles_subscription_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model usage_metrics {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id  String     @db.Uuid
  metric_type  String
  value        Int        @default(0)
  period_start DateTime   @db.Date
  period_end   DateTime   @db.Date
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  businesses   businesses @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model website_leads {
  id              String    @id @default(dbgenerated("(gen_random_uuid())::text"))
  full_name       String
  email           String
  company         String
  company_website String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  source          String?   @default("waitlist") @db.VarChar(191)
  referral_code   String?   @unique @db.VarChar(191)
  referred_by     String?   @db.VarChar(191)
  referral_count  Int?      @default(0)

  @@index([created_at], map: "idx_website_leads_created_at")
  @@index([email], map: "idx_website_leads_email")
  @@index([referral_code], map: "idx_website_leads_referral_code")
  @@index([referred_by], map: "idx_website_leads_referred_by")
  @@index([email], map: "idx_website_leads_rls")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum app_role {
  super_admin
  business_user

  @@schema("public")
}

enum chat_status {
  active
  resolved
  needs_human

  @@schema("public")
}

enum sender_type {
  visitor
  ai
  human

  @@schema("public")
}
